spring.application.name=ai-services

# Eureka Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# Optional: make instance ID unique per instance (useful when running multiple on same host)
# You can override this via command line or profile
eureka.instance.instance-id=${spring.application.name}:${server.port}

# Disable OpenAI auto-configuration to avoid conflicts
spring.autoconfigure.exclude=org.springframework.ai.autoconfigure.openai.OpenAiAutoConfiguration

# OpenAI Configuration
openai.api.key=${OPENAI_API_KEY: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}
openai.api.model=gpt-4o
openai.api.vision.model=gpt-4o
openai.api.max.tokens=1000

# Ollama Configuration
spring.ai.ollama.chat.base-url=http://localhost:11434
spring.ai.ollama.chat.model=OussamaELALLAM/MedExpert
spring.ai.ollama.chat.options.temperature=0.7
spring.ai.ollama.chat.options.top-p=0.9
spring.ai.ollama.chat.options.top-k=40

# Server Configuration
# Override per instance for multiple instances
server.port=8085

spring.main.allow-bean-definition-overriding=true

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
